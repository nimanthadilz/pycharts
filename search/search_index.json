{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to PyCharts++ What is PyCharts++? PyCharts++ is a hierarchical data visualization tool built using Python. What is hierarchical data? Hierarchical data is data where items are linked to each other using parent-child relationships. Hierarchical data exhibits a tree-like structure. What is used to build PyCharts++? PyCharts++ is built using Python. The GUI is built using Tkinter and the charts are generated using Matplotlib . CustomTkinter is used to obtain modern looking widgets for the GUI.","title":"Overview"},{"location":"#welcome-to-pycharts","text":"","title":"Welcome to PyCharts++"},{"location":"#what-is-pycharts","text":"PyCharts++ is a hierarchical data visualization tool built using Python.","title":"What is PyCharts++?"},{"location":"#what-is-hierarchical-data","text":"Hierarchical data is data where items are linked to each other using parent-child relationships. Hierarchical data exhibits a tree-like structure.","title":"What is hierarchical data?"},{"location":"#what-is-used-to-build-pycharts","text":"PyCharts++ is built using Python. The GUI is built using Tkinter and the charts are generated using Matplotlib . CustomTkinter is used to obtain modern looking widgets for the GUI.","title":"What is used to build PyCharts++?"},{"location":"charts/","text":"Charts PyCharts++ supports the following hierarchical chart types. Treemap Icicle Suburst More information about the supported chart types are provided below. Treemap Treemap represents a hierarchy using rectangles. Each rectangle corresponds to a node in the tree/hierarchy. The area of the rectangle is a representation of the value of the particular node associated with it. A treemap can be used to get an overall idea about the nodes and their values respective to the other nodes. Icicle Sunburst Sunburst represent a hierarchy using rings. Each ring corresponds to a level of the tree/hierarchy with the innermost circle as the root of the tree or top of the hierarchy and outmost circle as leaves of the tree or bottom of the hierarchy. Each ring divides into the values of the nodes. The sunburst chart's radial layout makes efficient use of available space than the linear (horizontal or vertical) hierarchical representation.","title":"Charts"},{"location":"charts/#charts","text":"PyCharts++ supports the following hierarchical chart types. Treemap Icicle Suburst More information about the supported chart types are provided below.","title":"Charts"},{"location":"charts/#treemap","text":"Treemap represents a hierarchy using rectangles. Each rectangle corresponds to a node in the tree/hierarchy. The area of the rectangle is a representation of the value of the particular node associated with it. A treemap can be used to get an overall idea about the nodes and their values respective to the other nodes.","title":"Treemap"},{"location":"charts/#icicle","text":"","title":"Icicle"},{"location":"charts/#sunburst","text":"Sunburst represent a hierarchy using rings. Each ring corresponds to a level of the tree/hierarchy with the innermost circle as the root of the tree or top of the hierarchy and outmost circle as leaves of the tree or bottom of the hierarchy. Each ring divides into the values of the nodes. The sunburst chart's radial layout makes efficient use of available space than the linear (horizontal or vertical) hierarchical representation.","title":"Sunburst"},{"location":"user_guide/","text":"User Guide Installation Usage Basic Usage Data File Preparation Customize Charts Export Charts Installation TODO Usage Basic Usage To generate a chart using PyCharts++, you need to provide a CSV data file in a pre-defined format to the program. See the Data File Preparation section for more information. You can select the data file by clicking on the Select button in the Data section of the Sidebar . Select the Chart Type from the dropdown menu. Click Generate button to generate the chart. Data File Preparation The input data file to PyCharts++ should be a Comma Separated Values (CSV) file. The format of the file is as follows: There must be two columns named name , and value . Each entry in the file is a node in the hierarchy/tree. The name column of an entry is given such that it represents all the nodes up to that node from the root. The node names are separated by periods. Example: root.node1.node2.node3 The value column can be empty, an integer, or a float for a given entry. (Non-leaf nodes of the tree have empty values.) Whenever you use a node name inside the name of another node, that ancestor node must be defined before the new node. Example: If you are entering root.node1.node2 as an entry, there must be a previous entry as root.node1 . The name of each node must be unique. (Please note the term node .) It means that if there is an entry as \" root.apple.orange. banana \", there cannot be an entry as \" root.apple. banana \". A sample input data file is shown below. name,value Countries, Countries.Asia, Countries.Asia.Sri Lanka, Countries.Asia.Sri Lanka.Negombo,100 Countries.Asia.Sri Lanka.Colombo,280 Countries.Asia.India, Countries.Asia.India.Mumbai,200 Countries.Asia.India.Chennai,380 Countries.Europe, Countries.Europe.Germany, Countries.Europe.Germany.Frankfurt,128 Countries.Europe.Italy, Countries.Europe.Italy.Venice,110 Countries.Europe.Italy.Rome,82 Customize Charts PyCharts++ offers few options to customize the charts generated. Title You can enter a title for the generated chart. Title font You can set the title's font family and font size. Chart font You can change the font family and the font size of the text inside the chart. Color Map You can select a color map for the colors of the chart. After setting the attributes, you need to click Update to update the chart. Export Charts You can export the generated charts into Portable Network Graphic (PNG) format. To export, click File from the Menu, then click Save as . A dialog will appear to select the location to save the output.","title":"User Guide"},{"location":"user_guide/#user-guide","text":"Installation Usage Basic Usage Data File Preparation Customize Charts Export Charts","title":"User Guide"},{"location":"user_guide/#installation","text":"TODO","title":"Installation"},{"location":"user_guide/#usage","text":"","title":"Usage"},{"location":"user_guide/#basic-usage","text":"To generate a chart using PyCharts++, you need to provide a CSV data file in a pre-defined format to the program. See the Data File Preparation section for more information. You can select the data file by clicking on the Select button in the Data section of the Sidebar . Select the Chart Type from the dropdown menu. Click Generate button to generate the chart.","title":"Basic Usage"},{"location":"user_guide/#data-file-preparation","text":"The input data file to PyCharts++ should be a Comma Separated Values (CSV) file. The format of the file is as follows: There must be two columns named name , and value . Each entry in the file is a node in the hierarchy/tree. The name column of an entry is given such that it represents all the nodes up to that node from the root. The node names are separated by periods. Example: root.node1.node2.node3 The value column can be empty, an integer, or a float for a given entry. (Non-leaf nodes of the tree have empty values.) Whenever you use a node name inside the name of another node, that ancestor node must be defined before the new node. Example: If you are entering root.node1.node2 as an entry, there must be a previous entry as root.node1 . The name of each node must be unique. (Please note the term node .) It means that if there is an entry as \" root.apple.orange. banana \", there cannot be an entry as \" root.apple. banana \". A sample input data file is shown below. name,value Countries, Countries.Asia, Countries.Asia.Sri Lanka, Countries.Asia.Sri Lanka.Negombo,100 Countries.Asia.Sri Lanka.Colombo,280 Countries.Asia.India, Countries.Asia.India.Mumbai,200 Countries.Asia.India.Chennai,380 Countries.Europe, Countries.Europe.Germany, Countries.Europe.Germany.Frankfurt,128 Countries.Europe.Italy, Countries.Europe.Italy.Venice,110 Countries.Europe.Italy.Rome,82","title":"Data File Preparation"},{"location":"user_guide/#customize-charts","text":"PyCharts++ offers few options to customize the charts generated. Title You can enter a title for the generated chart. Title font You can set the title's font family and font size. Chart font You can change the font family and the font size of the text inside the chart. Color Map You can select a color map for the colors of the chart. After setting the attributes, you need to click Update to update the chart.","title":"Customize Charts"},{"location":"user_guide/#export-charts","text":"You can export the generated charts into Portable Network Graphic (PNG) format. To export, click File from the Menu, then click Save as . A dialog will appear to select the location to save the output.","title":"Export Charts"}]}